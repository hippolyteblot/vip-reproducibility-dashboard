import dash_bootstrap_components as dbc
from dash import html, Output, Input, State, callback, clientside_callback, ClientsideFunction, dcc

from models.home import load_exp_from_db, get_available_applications, get_available_versions, \
    save_file_for_comparison, load_app_wf_from_db


def layout():
    return html.Div(
        [
            html.H1(
                children='Welcome on the VIP reproducibility dashboard',
                id='home-title',
            ),
            html.Div(
                children=[
                    html.P(
                        'This dashboard allows you to consult, study and compare the results generated by medical '
                        'imagining applications, mainly from the VIP platform. Different types of charts and metrics '
                        'are available to help you understand the results and their differences. For now, two '
                        'applications are explicitly supported: cQUEST and BraTS. You can also upload your own '
                        'results to compare them with adapted charts and metrics based on tabular data.'
                    ),
                ],
            ),

            html.H2(
                children='Based on your own data (from local storage)',
            ),
            html.Div(
                children=[
                    html.Div(
                        children=[
                            dbc.Row(
                                children=[
                                    html.H3('Compare raw results'),
                                    html.Div(
                                        children=[
                                            html.Img(
                                                src='/assets/images/upload_icon.png',
                                                style={'width': '140px', 'height': 'fit-content', 'padding': '10px'},
                                            ),
                                            html.Div(
                                                children=[
                                                    html.P(
                                                        'Upload your own raw results (nifiti or cquest format) to '
                                                        'compare them with adapted charts and metrics.'
                                                    ),
                                                    dbc.Button(
                                                        "Compare your results",
                                                        id="upload-open",
                                                        n_clicks=0,
                                                        style={'width': 'fit-content', 'marginLeft': '10px'},
                                                        className="mr-1"
                                                    ),
                                                    dbc.Modal(
                                                        [
                                                            dbc.ModalHeader(dbc.ModalTitle("Upload your own results")),
                                                            dbc.ModalBody(
                                                                children=[
                                                                    dbc.Row(
                                                                        children=[
                                                                            dbc.Col(
                                                                                children=[
                                                                                    html.P('Select the results format'),
                                                                                    dbc.Select(
                                                                                        id='application-selected-for-upload',
                                                                                        options=[
                                                                                            {'label': 'cQuest results (quest2.txt)',
                                                                                             'value': 'cquest'},
                                                                                            {'label': 'NIfTI files',
                                                                                             'value': 'nifti'},
                                                                                        ],
                                                                                        value='cquest',
                                                                                        style={'width': '100%'},
                                                                                    ),
                                                                                    html.Br(),
                                                                                    html.P('Select how you want to '
                                                                                             'compare your results'),
                                                                                    dbc.Select(
                                                                                        id='data-type-selected-for-upload',
                                                                                        options=[
                                                                                            {'label': '1 file to 1 file',
                                                                                             'value': '1-1'},
                                                                                            {
                                                                                                'label': 'x files to y files '
                                                                                                         '(two zipped folders)',
                                                                                                'value': 'x-y'},
                                                                                            {
                                                                                                'label': 'x files (one zipped '
                                                                                                         'folder)',
                                                                                                'value': 'x'},
                                                                                        ],
                                                                                        value='1-1',
                                                                                        style={'width': '100%'},
                                                                                    ),
                                                                                ],
                                                                                className='card-body',
                                                                            ),
                                                                            dbc.Col(
                                                                                children=[
                                                                                    html.P('Upload a first file to compare'),
                                                                                    html.Br(),
                                                                                    dcc.Upload(
                                                                                        id='upload-data-1',
                                                                                        children=html.Div(
                                                                                            children=[
                                                                                                'Drag and Drop or ',
                                                                                                html.A('Select Files')
                                                                                            ],
                                                                                            id='upload-data-1-div'
                                                                                        ),
                                                                                        style={
                                                                                            'width': '100%',
                                                                                            'height': '60px',
                                                                                            'lineHeight': '60px',
                                                                                            'borderWidth': '1px',
                                                                                            'borderStyle': 'dashed',
                                                                                            'borderRadius': '5px',
                                                                                            'textAlign': 'center',
                                                                                            'cursor': 'pointer',
                                                                                        },
                                                                                        multiple=False
                                                                                    ),
                                                                                    dcc.Input(
                                                                                        id='data-1-uuid',
                                                                                        type='hidden',
                                                                                    ),
                                                                                    dcc.Input(
                                                                                        id='data-type-uploaded1',
                                                                                        type='hidden',
                                                                                    ),
                                                                                    html.Br(),
                                                                                    html.Div(
                                                                                        id='output-data-upload-1',
                                                                                        style={'display': 'flex',
                                                                                               'justifyContent':
                                                                                                   'center'}
                                                                                    ),
                                                                                ],
                                                                                className='card-body',
                                                                            ),
                                                                            dbc.Col(
                                                                                children=[
                                                                                    html.P('Upload a second file to '
                                                                                           'compare'),
                                                                                    html.Br(),
                                                                                    dcc.Upload(
                                                                                        id='upload-data-2',
                                                                                        children=html.Div(
                                                                                            children=[
                                                                                                'Drag and Drop or ',
                                                                                                html.A('Select Files')
                                                                                            ],
                                                                                            id='upload-data-2-div'
                                                                                        ),
                                                                                        style={
                                                                                            'width': '100%',
                                                                                            'height': '60px',
                                                                                            'lineHeight': '60px',
                                                                                            'borderWidth': '1px',
                                                                                            'borderStyle': 'dashed',
                                                                                            'borderRadius': '5px',
                                                                                            'textAlign': 'center',
                                                                                            'cursor': 'pointer',
                                                                                        },
                                                                                        multiple=False
                                                                                    ),
                                                                                    dcc.Input(
                                                                                        id='data-2-uuid',
                                                                                        type='hidden',
                                                                                    ),
                                                                                    dcc.Input(
                                                                                        id='data-type-uploaded2',
                                                                                        type='hidden',
                                                                                    ),
                                                                                    html.Br(),
                                                                                    html.Div(
                                                                                        id='output-data-upload-2',
                                                                                        style={'display': 'flex',
                                                                                               'justifyContent':
                                                                                                   'center'}
                                                                                    ),
                                                                                ],
                                                                                className='card-body',
                                                                                id='upload-data-2-container',
                                                                            ),
                                                                            dbc.Col(
                                                                                children=[
                                                                                    dbc.Button(
                                                                                        'Compare',
                                                                                        id='compare-btn',
                                                                                        style={'width': '100%'},
                                                                                        className='btn btn-primary',
                                                                                        href='/compare-11?id1=&id2=',
                                                                                        disabled=True,
                                                                                    ),
                                                                                ],
                                                                            ),
                                                                        ],
                                                                        style={'justifyContent': 'center',
                                                                               'gap': '10px'},
                                                                    ),
                                                                ],
                                                                className='card',
                                                                style={'display': 'flex', 'justifyContent': 'center',
                                                                       'gap': '10px'},
                                                            ),
                                                            dbc.ModalFooter(
                                                                dbc.Button(
                                                                    "Close", id="upload-close",
                                                                    className="ms-auto", n_clicks=0
                                                                )
                                                            ),
                                                        ],
                                                        id="upload-modal",
                                                        is_open=False,
                                                    ),
                                                ],
                                                style={'display': 'flex', 'gap': '10px', 'flexDirection': 'column'},
                                            ),
                                        ],
                                        style={'display': 'flex', 'gap': '10px', 'flexDirection': 'row'},
                                    ),
                                ],
                                className='card-body',
                            ),
                        ],
                        className='card',
                        style={'display': 'flex', 'gap': '10px', 'flexDirection': 'column', 'width': '50%'},
                    ),
                    html.Div(
                        children=[
                            dbc.Row(
                                children=[
                                    html.H3('Compare tabular results'),
                                    html.Div(
                                        children=[
                                            html.Img(
                                                src='/assets/images/tabular_icon.png',
                                                style={'width': '140px', 'height': 'fit-content', 'padding': '10px'},
                                            ),
                                            html.Div(
                                                children=[
                                                    html.P(
                                                        'Compare tabular results using your own settings. '
                                                        'Choose axis, metrics and data to compare your results. '
                                                        'You can also share your settings with other users.'
                                                    ),
                                                    html.A(
                                                        dbc.Button(
                                                            "Compare tabular results",
                                                            id="compare-tabular-button",
                                                            n_clicks=0,
                                                            style={'width': 'fit-content', 'marginLeft': '10px'},
                                                            className="mr-1"
                                                        ),
                                                        href='visualize-experiment-template',
                                                    )
                                                ],
                                            )
                                        ],
                                        style={'display': 'flex', 'gap': '10px', 'flexDirection': 'row'},
                                    ),
                                ],
                                className='card-body',
                                style={'display': 'flex', 'gap': '10px', 'flexDirection': 'column'},
                            ),
                        ],
                        className='card',
                        style={'display': 'flex', 'gap': '10px', 'flexDirection': 'column', 'width': '50%'},
                    ),
                ],
                style={'display': 'flex', 'gap': '10px', 'flexDirection': 'row'},
            ),
            html.H2(
                children='Based on data from Girder platform (PILoT)',
            ),
            html.Div(
                children=[
                    html.Div(
                        children=[
                            dbc.Row(
                                children=[
                                    html.H3('Study a VIP experiment'),
                                    html.Div(
                                        children=[
                                            html.Img(
                                                src='/assets/images/microscope_icon.png',
                                                style={'width': '125px', 'height': 'fit-content', 'padding': '10px'},
                                            ),
                                            html.Div(
                                                children=[
                                                    html.P(
                                                        'Select an experiment to study its results. Experiment results '
                                                        'are stored on Girder with associated metrics values. '
                                                        'Experiments data are generated by active testing in CI.'
                                                    ),
                                                    dbc.Button(
                                                        "Study experiment",
                                                        id="exec-open",
                                                        n_clicks=0,
                                                        style={'width': 'fit-content', 'marginLeft': '10px'},
                                                        className="mr-1"
                                                    ),
                                                ],
                                            )
                                        ],
                                        style={'width': '100%', 'display': 'flex'},
                                    ),

                                    dbc.Modal(
                                        [
                                            dbc.ModalHeader(dbc.ModalTitle("Select an experiment to study")),
                                            dbc.ModalBody(
                                                children=[
                                                    html.Div(
                                                        children=[
                                                            html.Label(
                                                                children=[
                                                                    "Select an application",
                                                                    html.Br(),
                                                                    dbc.Select(
                                                                        id='select-app-wf',
                                                                        options=[
                                                                            {'label': 'All', 'value': 'all'}
                                                                        ],
                                                                        value='vip',
                                                                        style={'width': '100%'},
                                                                    ),
                                                                ],
                                                            ),
                                                            html.Label(
                                                                children=[
                                                                    "Select a version",
                                                                    html.Br(),
                                                                    dbc.Select(
                                                                        id='select-version-wf',
                                                                        options=[
                                                                            {'label': 'All', 'value': 'all'}
                                                                        ],
                                                                        value='all',
                                                                        style={'width': '100%'},
                                                                    ),
                                                                ],
                                                            ),
                                                            html.Label(
                                                                children=[
                                                                    "Search for an experiment",
                                                                    dbc.Input(
                                                                        id='search-exec',
                                                                        type='text',
                                                                        placeholder='Type here to search',
                                                                        style={'width': '100%'},
                                                                    ),
                                                                ],
                                                            ),
                                                        ],
                                                        style={'display': 'flex', 'gap': '10px',
                                                               'flexDirection': 'column'},
                                                    ),
                                                    # Search bar

                                                    html.Br(),
                                                    html.Div(
                                                        children=[
                                                            # List of experiments (from db)
                                                            dbc.Col(
                                                                className='card',
                                                                id='wf-container',
                                                                style={'flexDirection': 'column', 'maxHeight': '450px'
                                                                    , 'overflowY': 'scroll'},
                                                            ),
                                                        ],
                                                    ),
                                                    html.Div(
                                                        children=[
                                                            # Used for the search bar powered by js (not displayed)
                                                            dbc.Row(
                                                                className='card',
                                                                id='wf-container-hidden',
                                                                style={'display': 'none'},
                                                            ),
                                                        ],
                                                    )

                                                ]
                                            ),
                                            dbc.ModalFooter(
                                                dbc.Button(
                                                    "Close", id="exec-close", className="ms-auto", n_clicks=0
                                                )
                                            ),
                                        ],
                                        id="exec-modal",
                                        is_open=False,
                                    ),
                                ],
                                className='card-body',
                            ),
                        ],
                        className='card',
                        style={'display': 'flex', 'gap': '10px', 'flexDirection': 'column', 'width': '50%'},
                    ),
                    html.Div(
                        children=[
                            dbc.Row(
                                children=[
                                    html.H3('Compare two VIP experiments'),
                                    html.Div(
                                        children=[
                                            html.Img(
                                                src='/assets/images/balance_icon.png',
                                                style={'width': '140px', 'height': 'fit-content', 'padding': '10px'},
                                            ),
                                            html.Div(
                                                children=[
                                                    html.P(
                                                        'Select two experiments to compare their results, and study '
                                                        'similarity metrics.'
                                                    ),
                                                    dbc.Button(
                                                        "Compare experiments",
                                                        id="exp-open",
                                                        n_clicks=0,
                                                        style={'width': 'fit-content', 'marginLeft': '10px'},
                                                        className="mr-1"
                                                    ),
                                                ],
                                            )
                                        ],
                                        style={'width': '100%', 'display': 'flex'},
                                    ),
                                    dbc.Modal(
                                        [
                                            dbc.ModalHeader(dbc.ModalTitle("Select two experiments to compare")),
                                            dbc.ModalBody(
                                                children=[
                                                    html.Div(
                                                        children=[
                                                            html.Label(
                                                                children=[
                                                                    "Select an application",
                                                                    html.Br(),
                                                                    dbc.Select(
                                                                        id='select-app',
                                                                        options=[
                                                                            {'label': 'cQUEST', 'value': 'cquest'},
                                                                            {'label': 'BraTS', 'value': 'brats'},
                                                                        ],
                                                                        value='cquest',
                                                                        style={'width': '100%'},
                                                                    ),
                                                                ],
                                                            ),
                                                            html.Label(
                                                                children=[
                                                                    "Select a version",
                                                                    html.Br(),
                                                                    dbc.Select(
                                                                        id='select-version',
                                                                        options=[
                                                                            {'label': 'All', 'value': 'all'}
                                                                        ],
                                                                        value='all',
                                                                        style={'width': '100%'},
                                                                    ),
                                                                ],
                                                            ),
                                                            html.Label(
                                                                children=[
                                                                    "Search for an experiment",
                                                                    dbc.Input(
                                                                        id='search-exp',
                                                                        type='text',
                                                                        placeholder='Type here to search',
                                                                        style={'width': '100%'},
                                                                    ),
                                                                ],
                                                            ),
                                                        ],
                                                        style={'display': 'flex', 'gap': '10px',
                                                               'flexDirection': 'column'},
                                                    ),
                                                    html.Br(),
                                                    html.Div(
                                                        children=[
                                                            # List of experiments (from db)
                                                            dbc.Col(
                                                                children=[
                                                                    dbc.Row(
                                                                        children=[
                                                                            html.Div(
                                                                                children=[
                                                                                    dbc.RadioItems(
                                                                                        id="repro-execution-radio-1",
                                                                                        style={'width': 'fit-content'},
                                                                                    )
                                                                                ],
                                                                            )
                                                                        ],
                                                                        style={'flexDirection': 'row'},
                                                                    )
                                                                ],
                                                                className='card',
                                                                id='experiment-container-1',
                                                                style={'flexDirection': 'column', 'padding': '5px'},
                                                            ),
                                                            dbc.Col(
                                                                children=[
                                                                    dbc.Row(
                                                                        children=[
                                                                            html.Div(
                                                                                children=[
                                                                                    dbc.RadioItems(
                                                                                        id="repro-execution-radio-2",
                                                                                        style={'width': 'fit-content'},
                                                                                    )
                                                                                ],
                                                                            )
                                                                        ],
                                                                        style={'flexDirection': 'row'},
                                                                    )
                                                                ],
                                                                className='card',
                                                                id='experiment-container-2',
                                                                style={'flexDirection': 'column', 'padding': '5px'},
                                                            ),
                                                        ],
                                                        style={'display': 'flex', 'gap': '10px',
                                                               'flexDirection': 'row'},
                                                    ),
                                                    dbc.Button(
                                                        "Compare",
                                                        id="compare-exp-button",
                                                        n_clicks=0,
                                                        style={'width': 'fit-content'},
                                                        className="mr-1",
                                                        disabled=True
                                                    ),
                                                ]
                                            ),
                                            dbc.ModalFooter(
                                                dbc.Button(
                                                    "Close", id="exp-close", className="ms-auto", n_clicks=0
                                                )
                                            ),
                                        ],
                                        id="exp-modal",
                                        is_open=False,
                                    ),
                                ],
                                className='card-body',
                            ),
                        ],
                        className='card',
                        style={'display': 'flex', 'gap': '10px', 'flexDirection': 'column', 'width': '50%'},
                    ),
                ],
                style={'display': 'flex', 'gap': '10px', 'flexDirection': 'row'},
            ),
        ]
    )


@callback(
    Output('upload-modal', 'is_open'),
    Input('upload-open', 'n_clicks'),
    Input('upload-close', 'n_clicks'),
    State('upload-modal', 'is_open'),
    prevent_initial_call=True
)
def toggle_upload_modal(n1, n2, is_open):
    if n1 or n2:
        return not is_open
    return is_open


@callback(
    Output('upload-data-2-container', 'style'),
    Input('data-type-selected-for-upload', 'value'),
)
def update_upload_data_2_container(type_selected):
    if type_selected == 'x':
        return {'display': 'none'}
    else:
        return {'display': 'block'}


@callback(
    Output('compare-btn', 'disabled'),
    Input('compare-btn', 'href'),
    State('data-type-uploaded1', 'value'),
    State('data-type-uploaded2', 'value'),
    State('application-selected-for-upload', 'value'),
    State('data-type-selected-for-upload', 'value'),
    prevent_initial_call=True
)
def update_compare_btn(_, type1, type2, app, type_selected):
    # assert that if type_selected is 1-1, type1 and type2 are txt else zip
    if type_selected == '1-1' and ((type1 == 'txt' and type2 == 'txt' and app == 'cquest') or
                                   (type1 == 'nii' and type2 == 'nii' and app == 'brats') or
                                   (type1 in ['gz', 'nii'] and type2 in ['gz', 'nii']) and app == 'nifti'):
        return False
    elif type_selected == 'x-y' and type1 == 'zip' and type2 == 'zip':
        return False
    elif type_selected == 'x' and type1 == 'zip':
        return False
    else:
        return True


@callback(
    Output('upload-data-1-div', 'children'),
    Output('data-1-uuid', 'value'),
    Output('compare-btn', 'href', allow_duplicate=True),
    Output('data-type-uploaded1', 'value'),
    Input('upload-data-1', 'contents'),
    State('compare-btn', 'href'),
    State('upload-data-1', 'filename'),
    State('data-type-selected-for-upload', 'value'),
    State('application-selected-for-upload', 'value'),
    prevent_initial_call=True
)
def update_output1(content, href, name, type_selected, app):
    return update_output(content, href, name, 1, type_selected, app)


@callback(
    Output('upload-data-2-div', 'children'),
    Output('data-2-uuid', 'value'),
    Output('compare-btn', 'href', allow_duplicate=True),
    Output('data-type-uploaded2', 'value'),
    Input('upload-data-2', 'contents'),
    State('compare-btn', 'href'),
    State('upload-data-2', 'filename'),
    State('data-type-selected-for-upload', 'value'),
    State('application-selected-for-upload', 'value'),
    prevent_initial_call=True
)
def update_output2(content, href, name, type_selected, app):
    return update_output(content, href, name, 2, type_selected, app)


@callback(
    Output('compare-btn', 'href'),
    Input('application-selected-for-upload', 'value'),
    Input('data-type-selected-for-upload', 'value'),
    State('compare-btn', 'href'),
)
def update_href(app, data_type, href):
    app_str = 'compare'
    if app == 'nifti':
        app_str = 'compare-nii'
    data_type_str = '11'
    if data_type == 'x-y':
        data_type_str = 'xy'
    elif data_type == 'x':
        data_type_str = 'x'
    href_end = href.split('?')[1]
    href = app_str + '-' + data_type_str + '?' + href_end
    return href


def update_output(content, href, name, data_id, data_type, app):
    if content is not None and check_type(data_type, name, app):
        file_extension = name.split('.')[-1]
        if file_extension in ['txt', 'zip', 'nii'] or (name.split('.')[-2] == 'nii' and file_extension == 'gz'):
            # save the file in the server
            uuid = save_file_for_comparison(content, name)
            # get olds values
            id1 = 'id1=' + href.split('id1=')[1].split('&id2=')[0]
            id2 = 'id2=' + href.split('id2=')[1]
            # update the href
            if data_id == 1:
                id1 = 'id1=' + str(uuid)
            else:
                id2 = 'id2=' + str(uuid)
            href_begin = href.split('?')[0]
            href = href_begin + '?' + id1 + '&' + id2
            return html.Div([
                html.P('File uploaded: ' + name),
            ]), str(uuid), href, file_extension
        else:
            return html.Div([
                'Wrong file type, please upload a .txt file'
            ]), None, href, None
    else:
        return html.Div([
            'Wrong file type, please upload a file according to the selected application and data type',
        ]), None, href, None


def check_type(data_type, name, app):
    ext = name.split('.')[-1]
    if data_type == '1-1' and app == 'cquest':
        return ext == 'txt'
    elif data_type == '1-1' and app == 'nifti':
        return (ext == 'nii') or (name.split('.')[-2] == 'nii' and ext == 'gz')
    elif data_type == 'x-y' or data_type == 'x':
        return ext == 'zip'
    else:
        return False


@callback(
    Output("exec-modal", "is_open"),
    Output("wf-container-hidden", "children", allow_duplicate=True),
    Output("select-app-wf", "options"),
    [Input("exec-open", "n_clicks"), Input("exec-close", "n_clicks")],
    [State("exec-modal", "is_open")],
    prevent_initial_call=True
)
def toggle_modal_workflows(n1, n2, is_open):
    if n1 or n2:
        wf_list = load_exp_from_db()
        wf_data = get_list_structure2(wf_list, '/visualize-experiment')
        applications = get_available_applications()
        options = [{'label': app['name'], 'value': app['id']} for app in applications]
        options.insert(0, {'label': 'All', 'value': 'all'})
        return not is_open, wf_data, options

    return is_open, [], []


@callback(
    Output("repro-execution-radio-1", "options", allow_duplicate=True),
    Output("repro-execution-radio-2", "options", allow_duplicate=True),
    Input("select-version", "value"),
    State("select-app", "value"),
    prevent_initial_call=True
)
def filter_exp(version_id, app_id):
    exp_list = load_exp_from_db()
    new_exp_list = []
    if version_id != 'all':
        for exp in exp_list:
            if int(exp['version_id']) == int(version_id) and int(exp['application_id']) == int(app_id.split('/-/')[0]):
                new_exp_list.append(exp)
    else:
        for exp in exp_list:
            if int(app_id.split('/-/')[0]) == exp['application_id']:
                new_exp_list.append(exp)

    options = [{'label': exp['name'], 'value': str(exp['id']) + '/-/' + exp['application_name']} for exp in
               new_exp_list]

    return options, options


@callback(
    Output("wf-container", "children", allow_duplicate=True),
    Input("select-version-wf", "value"),
    prevent_initial_call=True
)
def filter_wf(version_id):
    wf_list = load_exp_from_db()
    new_wf_list = []
    if version_id != 'all':
        for wf in wf_list:
            if int(wf['version_id']) == int(version_id):
                new_wf_list.append(wf)
    else:
        new_wf_list = wf_list

    wf_data = get_list_structure2(new_wf_list, '/visualize-experiment')

    return wf_data


@callback(
    Output("exp-modal", "is_open"),
    Output("repro-execution-radio-1", "options", allow_duplicate=True),
    Output("repro-execution-radio-2", "options", allow_duplicate=True),
    Output("select-app", "options"),
    Output("select-app", "value"),
    [Input("exp-open", "n_clicks"), Input("exp-close", "n_clicks")],
    [State("exp-modal", "is_open")],
    prevent_initial_call=True
)
def toggle_modal_exp(n1, n2, is_open):
    if n1 or n2:
        exp_list = load_exp_from_db()
        exp_options = [{'label': exp['name'], 'value': str(exp['id']) + '/-/' + exp['application_name']} for exp in
                       exp_list]
        applications = get_available_applications()
        options = [{'label': app['name'], 'value': str(app['id']) + '/-/' + app['name']} for app in applications]
        print(exp_options)
        return not is_open, exp_options, exp_options, options, options[0]['value']

    return is_open, [], [], [], []


@callback(
    Output("select-version", "options"),
    Output("repro-execution-radio-1", "options", allow_duplicate=True),
    Output("repro-execution-radio-2", "options", allow_duplicate=True),
    [Input("select-app", "value")],
    prevent_initial_call=True
)
def update_version_dropdown(app_id):
    versions = get_available_versions(app_id)
    options = [{'label': version['number'], 'value': version['id']} for version in versions]
    options.sort(key=lambda x: x['label'])
    options.insert(0, {'label': 'All', 'value': 'all'})
    exp_list = load_exp_from_db()
    new_exp_list = []
    if app_id != 'all':
        for exp in exp_list:
            if int(exp['application_id']) == int(app_id.split('/-/')[0]):
                new_exp_list.append(exp)
    else:
        new_exp_list = exp_list

    exp_options = [{'label': exp['name'], 'value': str(exp['id']) + '/-/' + exp['application_name']} for exp in
                   new_exp_list]

    return options, exp_options, exp_options


@callback(
    Output("select-version-wf", "options"),
    Output("wf-container", "children", allow_duplicate=True),
    [Input("select-app-wf", "value")],
    prevent_initial_call=True
)
def update_wf_version_dropdown(app_id):
    versions = get_available_versions(app_id)
    options = [{'label': version['number'], 'value': version['id']} for version in versions]
    options.sort(key=lambda x: x['label'])
    options.insert(0, {'label': 'All', 'value': 'all'})
    wf_list = load_exp_from_db()
    new_wf_list = []
    if app_id != 'all':
        for wf in wf_list:
            if int(wf['application_id']) == int(app_id):
                new_wf_list.append(wf)
    else:
        new_wf_list = wf_list

    wf_data = get_list_structure2(new_wf_list, '/visualize-experiment')
    return options, wf_data


clientside_callback(
    ClientsideFunction(
        namespace="clientside",
        function_name="search_exp",
    ),
    Output("wf-container", "children", allow_duplicate=True),
    [Input("search-exec", "value"), Input("wf-container-hidden", "children")],
    prevent_initial_call=True
)

# Search on server side version
"""
@callback(
    Output("experiment-container", "children", allow_duplicate=True),
    [Input("search-exp", "value")],
    prevent_initial_call=True
)
def search_exp(value):
    exp_list = load_exp_from_db()
    if value is not None:
        exp_list = [exp for exp in exp_list if value.lower() in exp.get("name").lower()]

    exp_data = get_list_structure(exp_list, '/repro-experiment')

    return exp_data


@callback(
    Output("execution-container", "children", allow_duplicate=True),
    [Input("search-exec", "value")],
    prevent_initial_call=True
)
def search_exec(value):
    exec_list = load_exec_from_db()
    if value is not None:
        exec_list = [exec_item for exec_item in exec_list if value.lower() in exec_item.get("name").lower()]

    exec_data = get_list_structure(exec_list, '/repro-execution')

    return exec_data
"""


def get_list_structure(exp_list, href):
    return dbc.Row(
        children=[
            html.Div(
                children=[
                    dbc.Row(
                        children=[
                            dbc.Button(
                                exp.get("name"),
                                id='repro-execution',
                                className="mr-1",
                                href=href + '?experiment=' + str(exp.get("id")),
                                style={'width': 'fit-content'},
                            ),
                        ],
                        className='card-body',
                        style={'justifyContent': 'center', 'gap': '10px', 'width': 'fit-content'},
                    )
                    for exp in exp_list
                ],
            )
        ],
        style={'flexDirection': 'row'},
    )


def get_list_structure2(exp_list, href):
    return dbc.Row(
        children=[
            html.Div(
                children=[
                    dbc.Row(
                        children=[
                            dbc.Button(
                                exp.get("application_name") + '/' + exp.get("application_version")  + ' - ' +
                                exp.get("name"),
                                id='repro-execution',
                                className="mr-1",
                                href=href + "-" + str(exp.get("application_name")) + '?id=' + str(exp.get("id")),
                                style={'width': 'fit-content'},
                            ),
                        ],
                        className='card-body',
                        style={'justifyContent': 'center', 'gap': '10px', 'width': 'fit-content'},
                    )
                    for exp in exp_list
                ],
            )
        ],
        style={'flexDirection': 'row'},
    )


@callback(
    Output("compare-exp-button", "disabled"),
    Output("compare-exp-button", "href"),
    [Input("repro-execution-radio-1", "value"), Input("repro-execution-radio-2", "value")],
    prevent_initial_call=True
)
def toggle_compare_button(exp1, exp2):
    application_name1 = None
    application_name2 = None
    if exp1 is not None and exp2 is not None:
        application_name1 = exp1.split('/-/')[1]
        application_name2 = exp2.split('/-/')[1]

    if exp1 is not None and exp2 is not None and application_name1 == application_name2:
        begin_href = '/compare-exp-'
        if application_name1 == 'brats':
            begin_href += 'brats'
        elif application_name1 == 'cquest':
            begin_href += 'cquest'
        return False, begin_href + '?exp1=' + str(exp1.split('/-/')[0]) + '&exp2=' + str(exp2.split('/-/')[0])
    return True, '#'


@callback(
    Output("repro-wf-radio-1", "options", allow_duplicate=True),
    Output("repro-wf-radio-2", "options", allow_duplicate=True),
    Input("select-vip-app-wf", "value"),
    prevent_initial_call=True
)
def update_upload_options(app_id):
    wf_list = load_app_wf_from_db(app_id)
    options = [
        {'label': wf['name'] + " (" + wf['application_version'] + ")",
         'value': str(wf['id']) + '/-/' + wf['application_name']}
        for wf in wf_list]
    return options, options


@callback(
    Output("compare-upload-button", "disabled"),
    Output("compare-upload-button", "href"),
    [Input("repro-wf-radio-1", "value"),
     Input("repro-wf-radio-2", "value"),
     Input("select-vip-app-wf", "value"),
     Input("select-vip-app-wf", "options")],
    prevent_initial_call=True
)
def toggle_upload_compare_button(wf1, wf2, app_id, options):
    print(wf1, wf2, app_id, options)
    if wf1 is not None and wf2 is not None:
        application_name = None
        for option in options:
            if int(option['value']) == int(app_id):
                application_name = option['label'].split(' ')[0].lower()
        extension = ''
        if application_name == 'nifti':
            extension = 'compare-nii-11'
        elif application_name == 'cquest':
            extension = 'compare-xy'
        return False, extension + '?id1=' + str(wf1.split('/-/')[0]) + '&id2=' + str(wf2.split('/-/')[0])
    return True, '#'
